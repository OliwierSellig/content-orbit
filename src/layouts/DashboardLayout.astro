---
// Props Interface
export interface Props {
  title?: string;
}

const { title = "Content Orbit" } = Astro.props;
const mainClass = "container mx-auto px-4 py-8";

// Import global styles
import "../styles/global.css";
import { ToasterProvider } from "../components/ToasterProvider";
import { Header } from "../components/layout/Header";
import { ClientRouter } from "astro:transitions";
import { cn } from "@/lib/utils";

// Get current path for navigation
const currentPath = Astro.url.pathname;
const isArticlePage = currentPath.startsWith("/articles/");
---

<!doctype html>
<html lang="pl">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Content Orbit - Zarządzanie treścią w oparciu o AI" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <title>{title}</title>

    <!-- Enable View Transitions for smooth page navigation (maybe for later) -->
    <ClientRouter />
  </head>
  <body>
    <div class="min-h-screen bg-background relative">
      {/* Header z nawigacją */}
      <header
        class={cn(
          "bg-background border-b border-neutral-600 z-50 backdrop-blur-sm",
          isArticlePage ? "absolute top-0 w-full" : "sticky top-0"
        )}
        transition:name={isArticlePage ? "header-absolute" : "header-sticky"}
      >
        <Header client:load currentPath={currentPath} />
      </header>

      {/* Główna treść */}
      <main
        class={cn(
          isArticlePage ? "w-full" : mainClass,
          isArticlePage && "pt-16" // 64px offset for absolute header
        )}
        transition:name={isArticlePage ? "main-absolute" : "main-content"}
      >
        <slot />
      </main>
    </div>

    <!-- Toaster dla powiadomień -->
    <ToasterProvider client:load />
  </body>
</html>
